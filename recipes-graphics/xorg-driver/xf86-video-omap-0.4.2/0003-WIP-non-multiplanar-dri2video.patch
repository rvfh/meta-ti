From 39ca2e9cee86c20e3541ca62945f8f452730a1c1 Mon Sep 17 00:00:00 2001
From: Rob Clark <rob@ti.com>
Date: Sat, 16 Jun 2012 02:49:55 +0000
Subject: [PATCH 3/5] WIP: non-multiplanar dri2video

---
 src/omap_dri2.c |   53 ++++++++++++++++++++++++++++++++++++-----------------
 src/omap_exa.c  |    7 +++++++
 src/omap_exa.h  |    1 +
 3 files changed, 44 insertions(+), 17 deletions(-)

diff --git a/src/omap_dri2.c b/src/omap_dri2.c
index f7ef4f8..7911e08 100644
--- a/src/omap_dri2.c
+++ b/src/omap_dri2.c
@@ -319,31 +319,50 @@ OMAPDRI2CreateBufferVid(DrawablePtr pDraw, unsigned int attachment,
 	OMAPDRI2BufferPtr buf;
 	PixmapPtr pPixmap;
 	int bpp, extraCount = 0, ew = width, eh = height;
+	unsigned usage_hint = 0;
 
 	DEBUG_MSG("pDraw=%p, attachment=%d, format=%08x",
 			pDraw, attachment, format);
 
-	switch(format) {
-	case fourcc_code('I','4','2','0'):
-	case fourcc_code('Y','V','1','2'):
-		extraCount++;
-		ew /= 2;
+#define MULTI_PLANAR 0
+	if (MULTI_PLANAR) {
+		switch(format) {
+		case fourcc_code('I','4','2','0'):
+		case fourcc_code('Y','V','1','2'):
+			extraCount++;
+			ew /= 2;
 		/* fallthru */
-	case fourcc_code('N','V','1','2'):
-		extraCount++;
-		eh /= 2;
-		bpp = 8;
-		break;
-	case fourcc_code('U','Y','V','Y'):
-	case fourcc_code('Y','U','Y','2'):
-		bpp = 16;
-		break;
-	default:
-		return NULL;
+		case fourcc_code('N','V','1','2'):
+			extraCount++;
+			eh /= 2;
+			bpp = 8;
+			break;
+		case fourcc_code('U','Y','V','Y'):
+		case fourcc_code('Y','U','Y','2'):
+			bpp = 16;
+			break;
+		default:
+			return NULL;
+		}
+	} else {
+		switch(format) {
+		case fourcc_code('I','4','2','0'):
+		case fourcc_code('Y','V','1','2'):
+		case fourcc_code('N','V','1','2'):
+			bpp = 8;
+			usage_hint = OMAP_CREATE_PIXMAP_420;
+			break;
+		case fourcc_code('U','Y','V','Y'):
+		case fourcc_code('Y','U','Y','2'):
+			bpp = 16;
+			break;
+		default:
+			return NULL;
+		}
 	}
 
 	/* main buffer, luma buffer in case of multi-planar.. */
-	pPixmap = pScreen->CreatePixmap(pScreen, width, height, bpp, 0);
+	pPixmap = pScreen->CreatePixmap(pScreen, width, height, bpp, usage_hint);
 
 	buf = createbuf(pDraw, pPixmap, attachment, format);
 
diff --git a/src/omap_exa.c b/src/omap_exa.c
index 33844be..7964879 100644
--- a/src/omap_exa.c
+++ b/src/omap_exa.c
@@ -156,6 +156,13 @@ OMAPModifyPixmapHeader(PixmapPtr pPixmap, int width, int height,
 		pPixmap->devKind = OMAPCalculateStride(width, bitsPerPixel);
 	}
 
+	/* if this is a planar 420 YUV format, then the bpp field only
+	 * represents the Y plane.. increase the height to account for
+	 * the U and V..
+	 */
+	if (pPixmap->usage_hint & OMAP_CREATE_PIXMAP_420)
+		height += (height + 1) / 2;
+
 	size = pPixmap->devKind * height;
 
 	if ((!priv->bo) || (omap_bo_size(priv->bo) != size)) {
diff --git a/src/omap_exa.h b/src/omap_exa.h
index 94ac9cc..fba979d 100644
--- a/src/omap_exa.h
+++ b/src/omap_exa.h
@@ -130,6 +130,7 @@ typedef struct {
 
 #define OMAP_CREATE_PIXMAP_SCANOUT 0x80000000
 #define OMAP_CREATE_PIXMAP_TILED   0x40000000
+#define OMAP_CREATE_PIXMAP_420     0x20000000
 
 
 void * OMAPCreatePixmap (ScreenPtr pScreen, int width, int height,
-- 
1.7.9.5

